{"uid":"1ce77178f80056cb","name":"Update product","fullName":"tests.products.test_products.TestProducts#test_update_product","historyId":"63770b0d18420276c6513e908eb56926","time":{"start":1761934057183,"stop":1761934057574,"duration":391},"status":"failed","statusMessage":"AssertionError: Incorrect value: \"category id\". Expected value: 579. Actual value: None.","statusTrace":"self = <test_products.TestProducts object at 0x000002936FE91F40>\nproducts_client = <clients.products.products_client.ProductsClient object at 0x000002936FEE7360>\nfunction_product = ProductFixture(request=CreateProductRequestSchema(title='Tax big language', price=6599.93, description='Simple push ne...25, 10, 31, 18, 7, 37, tzinfo=TzInfo(UTC)), updated_at=datetime.datetime(2025, 10, 31, 18, 7, 37, tzinfo=TzInfo(UTC))))\n\n    @allure.story(AllureStory.UPDATE_ENTITY)\n    @allure.title(\"Update product\")\n    @allure.severity(Severity.NORMAL)\n    def test_update_product(\n            self,\n            products_client: ProductsClient,\n            function_product: ProductFixture\n    ):\n        request = UpdateProductRequestSchema()\n        response = products_client.update_product_api(function_product.response.id, request)\n        response_data = UpdateProductResponseSchema.model_validate_json(response.text)\n    \n        assert_status_code(response.status_code, HTTPStatus.OK)\n>       assert_update_product_response(request, response_data)\n\ntests\\products\\test_products.py:116: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntools\\assertions\\products.py:115: in assert_update_product_response\n    assert_equal(request.category_id, response.category.id, \"category id\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nactual = None, expected = 579, name = 'category id'\n\n    @allure.step(\"Check that {name} equal to {expected}\")\n    def assert_equal(actual: Any, expected: Any, name: str):\n        \"\"\"\n        Проверяет, что фактическое значение равно ожидаемому.\n    \n        :param name: Название проверяемого значения.\n        :param actual: Фактическое значение.\n        :param expected: Ожидаемое значение.\n        :raises AssertionError: Если фактическое значение не равно ожидаемому.\n        \"\"\"\n        logger.info(f'Check that \"{name}\" equals to {expected}')\n    \n>       assert actual == expected, (\n               ^^^^^^^^^^^^^^^^^^\n            f'Incorrect value: \"{name}\". '\n            f'Expected value: {expected}. '\n            f'Actual value: {actual}.'\n        )\nE       AssertionError: Incorrect value: \"category id\". Expected value: 579. Actual value: None.\n\ntools\\assertions\\base.py:39: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1761934038701,"stop":1761934038702,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_global_logger","time":{"start":1761934038702,"stop":1761934038702,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"attach_logs_to_allure","time":{"start":1761934054918,"stop":1761934054919,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"products_client","time":{"start":1761934054919,"stop":1761934055272,"duration":353},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"category_client","time":{"start":1761934055273,"stop":1761934055682,"duration":409},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"function_category","time":{"start":1761934055682,"stop":1761934056299,"duration":617},"status":"passed","steps":[{"name":"Create category","time":{"start":1761934055682,"stop":1761934056299,"duration":617},"status":"passed","steps":[{"name":"Make POST request to 'api/v1/categories'","time":{"start":1761934055682,"stop":1761934056299,"duration":617},"status":"passed","steps":[],"attachments":[{"uid":"81abbceb84efd665","name":"cURL command","source":"81abbceb84efd665.txt","type":"text/plain","size":383}],"parameters":[{"name":"url","value":"'api/v1/categories'"},{"name":"json","value":"{'name': 'Itself people alone', 'image': 'http://guerra.com/categoriesfaq.htm'}"},{"name":"data","value":"None"},{"name":"files","value":"None"}],"attachmentsCount":1,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"request","value":"CreateCategoryRequestSchema(name='Itself people alone', image='http://guerra.com/categoriesfaq.htm')"}],"attachmentsCount":1,"shouldDisplayMessage":false,"stepsCount":1,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":false,"stepsCount":2,"hasContent":true,"attachmentStep":false},{"name":"function_product","time":{"start":1761934056299,"stop":1761934057183,"duration":884},"status":"passed","steps":[{"name":"Create product","time":{"start":1761934056300,"stop":1761934057183,"duration":883},"status":"passed","steps":[{"name":"Make POST request to 'api/v1/products'","time":{"start":1761934056300,"stop":1761934057182,"duration":882},"status":"passed","steps":[],"attachments":[{"uid":"ca43a09e0f81599d","name":"cURL command","source":"ca43a09e0f81599d.txt","type":"text/plain","size":579}],"parameters":[{"name":"url","value":"'api/v1/products'"},{"name":"json","value":"{'title': 'Tax big language', 'price': 6599.93, 'description': 'Simple push newspaper environment.', 'categoryId': 579, 'images': ['http://www.robles.biz/app/blog/categoriescategory.php', 'http://www.montoya.com/category/tagsterms.html', 'https://www.williams.com/main/appmain.html']}"},{"name":"data","value":"None"},{"name":"files","value":"None"}],"attachmentsCount":1,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"request","value":"CreateProductRequestSchema(title='Tax big language', price=6599.93, description='Simple push newspaper environment.', category_id=579, images=['http://www.robles.biz/app/blog/categoriescategory.php', 'http://www.montoya.com/category/tagsterms.html', 'https://www.williams.com/main/appmain.html'])"}],"attachmentsCount":1,"shouldDisplayMessage":false,"stepsCount":1,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":false,"stepsCount":2,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Incorrect value: \"category id\". Expected value: 579. Actual value: None.","statusTrace":"self = <test_products.TestProducts object at 0x000002936FE91F40>\nproducts_client = <clients.products.products_client.ProductsClient object at 0x000002936FEE7360>\nfunction_product = ProductFixture(request=CreateProductRequestSchema(title='Tax big language', price=6599.93, description='Simple push ne...25, 10, 31, 18, 7, 37, tzinfo=TzInfo(UTC)), updated_at=datetime.datetime(2025, 10, 31, 18, 7, 37, tzinfo=TzInfo(UTC))))\n\n    @allure.story(AllureStory.UPDATE_ENTITY)\n    @allure.title(\"Update product\")\n    @allure.severity(Severity.NORMAL)\n    def test_update_product(\n            self,\n            products_client: ProductsClient,\n            function_product: ProductFixture\n    ):\n        request = UpdateProductRequestSchema()\n        response = products_client.update_product_api(function_product.response.id, request)\n        response_data = UpdateProductResponseSchema.model_validate_json(response.text)\n    \n        assert_status_code(response.status_code, HTTPStatus.OK)\n>       assert_update_product_response(request, response_data)\n\ntests\\products\\test_products.py:116: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntools\\assertions\\products.py:115: in assert_update_product_response\n    assert_equal(request.category_id, response.category.id, \"category id\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nactual = None, expected = 579, name = 'category id'\n\n    @allure.step(\"Check that {name} equal to {expected}\")\n    def assert_equal(actual: Any, expected: Any, name: str):\n        \"\"\"\n        Проверяет, что фактическое значение равно ожидаемому.\n    \n        :param name: Название проверяемого значения.\n        :param actual: Фактическое значение.\n        :param expected: Ожидаемое значение.\n        :raises AssertionError: Если фактическое значение не равно ожидаемому.\n        \"\"\"\n        logger.info(f'Check that \"{name}\" equals to {expected}')\n    \n>       assert actual == expected, (\n               ^^^^^^^^^^^^^^^^^^\n            f'Incorrect value: \"{name}\". '\n            f'Expected value: {expected}. '\n            f'Actual value: {actual}.'\n        )\nE       AssertionError: Incorrect value: \"category id\". Expected value: 579. Actual value: None.\n\ntools\\assertions\\base.py:39: AssertionError","steps":[{"name":"Update product","time":{"start":1761934057184,"stop":1761934057572,"duration":388},"status":"passed","steps":[{"name":"Make PUT request to 'api/v1/products/521'","time":{"start":1761934057184,"stop":1761934057572,"duration":388},"status":"passed","steps":[],"attachments":[{"uid":"da011672a800964b","name":"cURL command","source":"da011672a800964b.txt","type":"text/plain","size":500}],"parameters":[{"name":"url","value":"'api/v1/products/521'"},{"name":"json","value":"{'title': 'High authority', 'price': 8702.98, 'description': 'Drug its outside event left.', 'images': ['https://larsen.com/app/mainregister.htm', 'http://lewis-torres.info/explore/appregister.jsp']}"}],"attachmentsCount":1,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"product_id","value":"521"},{"name":"request","value":"UpdateProductRequestSchema(title='High authority', price=8702.98, description='Drug its outside event left.', category_id=None, images=['https://larsen.com/app/mainregister.htm', 'http://lewis-torres.info/explore/appregister.jsp'])"}],"attachmentsCount":1,"shouldDisplayMessage":false,"stepsCount":1,"hasContent":true,"attachmentStep":false},{"name":"Check that response status code equal to <HTTPStatus.OK: 200>","time":{"start":1761934057572,"stop":1761934057573,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"actual","value":"200"},{"name":"expected","value":"<HTTPStatus.OK: 200>"}],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Check update product response","time":{"start":1761934057573,"stop":1761934057574,"duration":1},"status":"failed","statusMessage":"AssertionError: Incorrect value: \"category id\". Expected value: 579. Actual value: None.\n","statusTrace":"  File \"C:\\Users\\borbo\\PycharmProjects\\api_autotests\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\borbo\\PycharmProjects\\api_autotests\\tools\\assertions\\products.py\", line 115, in assert_update_product_response\n    assert_equal(request.category_id, response.category.id, \"category id\")\n    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\borbo\\PycharmProjects\\api_autotests\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\borbo\\PycharmProjects\\api_autotests\\tools\\assertions\\base.py\", line 39, in assert_equal\n    assert actual == expected, (\n           ^^^^^^^^^^^^^^^^^^\n","steps":[{"name":"Check that 'title' equal to 'High authority'","time":{"start":1761934057573,"stop":1761934057573,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"actual","value":"'High authority'"},{"name":"expected","value":"'High authority'"},{"name":"name","value":"'title'"}],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Check that 'price' equal to 8702.98","time":{"start":1761934057573,"stop":1761934057573,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"actual","value":"8702.98"},{"name":"expected","value":"8702.98"},{"name":"name","value":"'price'"}],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Check that 'description' equal to 'Drug its outside event left.'","time":{"start":1761934057573,"stop":1761934057574,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"actual","value":"'Drug its outside event left.'"},{"name":"expected","value":"'Drug its outside event left.'"},{"name":"name","value":"'description'"}],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Check that 'category id' equal to 579","time":{"start":1761934057574,"stop":1761934057574,"duration":0},"status":"failed","statusMessage":"AssertionError: Incorrect value: \"category id\". Expected value: 579. Actual value: None.\n","statusTrace":"  File \"C:\\Users\\borbo\\PycharmProjects\\api_autotests\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\borbo\\PycharmProjects\\api_autotests\\tools\\assertions\\base.py\", line 39, in assert_equal\n    assert actual == expected, (\n           ^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[{"name":"actual","value":"None"},{"name":"expected","value":"579"},{"name":"name","value":"'category id'"}],"attachmentsCount":0,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"request","value":"UpdateProductRequestSchema(title='High authority', price=8702.98, description='Drug its outside event left.', category_id=None, images=['https://larsen.com/app/mainregister.htm', 'http://lewis-torres.info/explore/appregister.jsp'])"},{"name":"response","value":"UpdateProductResponseSchema(id=521, title='High authority', slug='high-authority', price=8702.98, description='Drug its outside event left.', category=CategorySchema(id=579, name='Itself people alone', slug='itself-people-alone', image=HttpUrl('http://guerra.com/categoriesfaq.htm'), creation_at=datetime.datetime(2025, 10, 31, 18, 7, 36, tzinfo=TzInfo(UTC)), updated_at=datetime.datetime(2025, 10, 31, 18, 7, 36, tzinfo=TzInfo(UTC))), images=[HttpUrl('https://larsen.com/app/mainregister.htm'), HttpUrl('http://lewis-torres.info/explore/appregister.jsp')], creation_at=datetime.datetime(2025, 10, 31, 18, 7, 37, tzinfo=TzInfo(UTC)), updated_at=datetime.datetime(2025, 10, 31, 18, 7, 37, tzinfo=TzInfo(UTC)))"}],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":4,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"stepsCount":8,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"attach_logs_to_allure::0","time":{"start":1761934057582,"stop":1761934057583,"duration":1},"status":"passed","steps":[],"attachments":[{"uid":"449ee745db87ccfc","name":"logs","source":"449ee745db87ccfc.txt","type":"text/plain","size":1373}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"severity","value":"normal"},{"name":"feature","value":"Products"},{"name":"epic","value":"Store service"},{"name":"story","value":"Update entity"},{"name":"tag","value":"products"},{"name":"tag","value":"regression"},{"name":"parentSuite","value":"tests.products"},{"name":"suite","value":"test_products"},{"name":"subSuite","value":"TestProducts"},{"name":"host","value":"Kompukter"},{"name":"thread","value":"18516-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.products.test_products"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"4b1f39fad612d302","status":"failed","statusDetails":"AssertionError: Incorrect value: \"category id\". Expected value: 553. Actual value: None.","time":{"start":1761933979663,"stop":1761933980182,"duration":519}},{"uid":"56432add018bb47d","status":"failed","statusDetails":"AssertionError: Incorrect value: \"category id\". Expected value: 526. Actual value: None.","time":{"start":1761933893126,"stop":1761933893504,"duration":378}}]},"tags":["regression","products"]},"source":"1ce77178f80056cb.json","parameterValues":[]}