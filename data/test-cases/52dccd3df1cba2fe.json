{"uid":"52dccd3df1cba2fe","name":"Get product by ID","fullName":"tests.products.test_products.TestProducts#test_get_product_by_id","historyId":"4f1a9d4bcc2cf63b8d94db430d9c5540","time":{"start":1761934052562,"stop":1761934052717,"duration":155},"status":"failed","statusMessage":"AssertionError: Incorrect value: \"price\". Expected value: 7619.6. Actual value: 7619.","statusTrace":"self = <test_products.TestProducts object at 0x000002936FE9F450>\nproducts_client = <clients.products.products_client.ProductsClient object at 0x000002937005EFD0>\nfunction_product = ProductFixture(request=CreateProductRequestSchema(title='Many probably', price=7619.6, description='List international...25, 10, 31, 18, 7, 32, tzinfo=TzInfo(UTC)), updated_at=datetime.datetime(2025, 10, 31, 18, 7, 32, tzinfo=TzInfo(UTC))))\n\n    @allure.story(AllureStory.GET_ENTITY)\n    @allure.title(\"Get product by ID\")\n    @allure.severity(Severity.NORMAL)\n    def test_get_product_by_id(self, products_client: ProductsClient, function_product: ProductFixture):\n        response = products_client.get_product_by_id_api(product_id=function_product.response.id)\n        response_data = GetProductResponseSchema.model_validate_json(response.text)\n    \n        assert_status_code(response.status_code, HTTPStatus.OK)\n>       assert_get_product_response(response_data, function_product.response)\n\ntests\\products\\test_products.py:87: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntools\\assertions\\products.py:98: in assert_get_product_response\n    assert_product(actual, expected)\ntools\\assertions\\products.py:79: in assert_product\n    assert_equal(actual.price, expected.price, \"price\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nactual = 7619, expected = 7619.6, name = 'price'\n\n    @allure.step(\"Check that {name} equal to {expected}\")\n    def assert_equal(actual: Any, expected: Any, name: str):\n        \"\"\"\n        Проверяет, что фактическое значение равно ожидаемому.\n    \n        :param name: Название проверяемого значения.\n        :param actual: Фактическое значение.\n        :param expected: Ожидаемое значение.\n        :raises AssertionError: Если фактическое значение не равно ожидаемому.\n        \"\"\"\n        logger.info(f'Check that \"{name}\" equals to {expected}')\n    \n>       assert actual == expected, (\n               ^^^^^^^^^^^^^^^^^^\n            f'Incorrect value: \"{name}\". '\n            f'Expected value: {expected}. '\n            f'Actual value: {actual}.'\n        )\nE       AssertionError: Incorrect value: \"price\". Expected value: 7619.6. Actual value: 7619.\n\ntools\\assertions\\base.py:39: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1761934038701,"stop":1761934038702,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_global_logger","time":{"start":1761934038702,"stop":1761934038702,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"attach_logs_to_allure","time":{"start":1761934050738,"stop":1761934050739,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"products_client","time":{"start":1761934050739,"stop":1761934051050,"duration":311},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"category_client","time":{"start":1761934051050,"stop":1761934051307,"duration":257},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"function_category","time":{"start":1761934051307,"stop":1761934051985,"duration":678},"status":"passed","steps":[{"name":"Create category","time":{"start":1761934051308,"stop":1761934051985,"duration":677},"status":"passed","steps":[{"name":"Make POST request to 'api/v1/categories'","time":{"start":1761934051308,"stop":1761934051985,"duration":677},"status":"passed","steps":[],"attachments":[{"uid":"a2afefa32bbdd584","name":"cURL command","source":"a2afefa32bbdd584.txt","type":"text/plain","size":399}],"parameters":[{"name":"url","value":"'api/v1/categories'"},{"name":"json","value":"{'name': 'Four maybe local', 'image': 'http://www.thompson.info/tag/category/appregister.html'}"},{"name":"data","value":"None"},{"name":"files","value":"None"}],"attachmentsCount":1,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"request","value":"CreateCategoryRequestSchema(name='Four maybe local', image='http://www.thompson.info/tag/category/appregister.html')"}],"attachmentsCount":1,"shouldDisplayMessage":false,"stepsCount":1,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":false,"stepsCount":2,"hasContent":true,"attachmentStep":false},{"name":"function_product","time":{"start":1761934051985,"stop":1761934052562,"duration":577},"status":"passed","steps":[{"name":"Create product","time":{"start":1761934051986,"stop":1761934052562,"duration":576},"status":"passed","steps":[{"name":"Make POST request to 'api/v1/products'","time":{"start":1761934051986,"stop":1761934052562,"duration":576},"status":"passed","steps":[],"attachments":[{"uid":"f56360b747d8dced","name":"cURL command","source":"f56360b747d8dced.txt","type":"text/plain","size":458}],"parameters":[{"name":"url","value":"'api/v1/products'"},{"name":"json","value":"{'title': 'Many probably', 'price': 7619.6, 'description': 'List international perform follow.', 'categoryId': 574, 'images': ['http://scott.biz/bloglogin.jsp']}"},{"name":"data","value":"None"},{"name":"files","value":"None"}],"attachmentsCount":1,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"request","value":"CreateProductRequestSchema(title='Many probably', price=7619.6, description='List international perform follow.', category_id=574, images=['http://scott.biz/bloglogin.jsp'])"}],"attachmentsCount":1,"shouldDisplayMessage":false,"stepsCount":1,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":false,"stepsCount":2,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Incorrect value: \"price\". Expected value: 7619.6. Actual value: 7619.","statusTrace":"self = <test_products.TestProducts object at 0x000002936FE9F450>\nproducts_client = <clients.products.products_client.ProductsClient object at 0x000002937005EFD0>\nfunction_product = ProductFixture(request=CreateProductRequestSchema(title='Many probably', price=7619.6, description='List international...25, 10, 31, 18, 7, 32, tzinfo=TzInfo(UTC)), updated_at=datetime.datetime(2025, 10, 31, 18, 7, 32, tzinfo=TzInfo(UTC))))\n\n    @allure.story(AllureStory.GET_ENTITY)\n    @allure.title(\"Get product by ID\")\n    @allure.severity(Severity.NORMAL)\n    def test_get_product_by_id(self, products_client: ProductsClient, function_product: ProductFixture):\n        response = products_client.get_product_by_id_api(product_id=function_product.response.id)\n        response_data = GetProductResponseSchema.model_validate_json(response.text)\n    \n        assert_status_code(response.status_code, HTTPStatus.OK)\n>       assert_get_product_response(response_data, function_product.response)\n\ntests\\products\\test_products.py:87: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntools\\assertions\\products.py:98: in assert_get_product_response\n    assert_product(actual, expected)\ntools\\assertions\\products.py:79: in assert_product\n    assert_equal(actual.price, expected.price, \"price\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nactual = 7619, expected = 7619.6, name = 'price'\n\n    @allure.step(\"Check that {name} equal to {expected}\")\n    def assert_equal(actual: Any, expected: Any, name: str):\n        \"\"\"\n        Проверяет, что фактическое значение равно ожидаемому.\n    \n        :param name: Название проверяемого значения.\n        :param actual: Фактическое значение.\n        :param expected: Ожидаемое значение.\n        :raises AssertionError: Если фактическое значение не равно ожидаемому.\n        \"\"\"\n        logger.info(f'Check that \"{name}\" equals to {expected}')\n    \n>       assert actual == expected, (\n               ^^^^^^^^^^^^^^^^^^\n            f'Incorrect value: \"{name}\". '\n            f'Expected value: {expected}. '\n            f'Actual value: {actual}.'\n        )\nE       AssertionError: Incorrect value: \"price\". Expected value: 7619.6. Actual value: 7619.\n\ntools\\assertions\\base.py:39: AssertionError","steps":[{"name":"Get product by id 516","time":{"start":1761934052563,"stop":1761934052713,"duration":150},"status":"passed","steps":[{"name":"Make GET request to 'api/v1/products/516'","time":{"start":1761934052563,"stop":1761934052713,"duration":150},"status":"passed","steps":[],"attachments":[{"uid":"c8a754de7b6added","name":"cURL command","source":"c8a754de7b6added.txt","type":"text/plain","size":230}],"parameters":[{"name":"url","value":"'api/v1/products/516'"},{"name":"params","value":"None"}],"attachmentsCount":1,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"product_id","value":"516"}],"attachmentsCount":1,"shouldDisplayMessage":false,"stepsCount":1,"hasContent":true,"attachmentStep":false},{"name":"Check that response status code equal to <HTTPStatus.OK: 200>","time":{"start":1761934052713,"stop":1761934052713,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"actual","value":"200"},{"name":"expected","value":"<HTTPStatus.OK: 200>"}],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Check get product response","time":{"start":1761934052714,"stop":1761934052716,"duration":2},"status":"failed","statusMessage":"AssertionError: Incorrect value: \"price\". Expected value: 7619.6. Actual value: 7619.\n","statusTrace":"  File \"C:\\Users\\borbo\\PycharmProjects\\api_autotests\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\borbo\\PycharmProjects\\api_autotests\\tools\\assertions\\products.py\", line 98, in assert_get_product_response\n    assert_product(actual, expected)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\borbo\\PycharmProjects\\api_autotests\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\borbo\\PycharmProjects\\api_autotests\\tools\\assertions\\products.py\", line 79, in assert_product\n    assert_equal(actual.price, expected.price, \"price\")\n    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\borbo\\PycharmProjects\\api_autotests\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\borbo\\PycharmProjects\\api_autotests\\tools\\assertions\\base.py\", line 39, in assert_equal\n    assert actual == expected, (\n           ^^^^^^^^^^^^^^^^^^\n","steps":[{"name":"Check product","time":{"start":1761934052714,"stop":1761934052715,"duration":1},"status":"failed","statusMessage":"AssertionError: Incorrect value: \"price\". Expected value: 7619.6. Actual value: 7619.\n","statusTrace":"  File \"C:\\Users\\borbo\\PycharmProjects\\api_autotests\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\borbo\\PycharmProjects\\api_autotests\\tools\\assertions\\products.py\", line 79, in assert_product\n    assert_equal(actual.price, expected.price, \"price\")\n    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\borbo\\PycharmProjects\\api_autotests\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\borbo\\PycharmProjects\\api_autotests\\tools\\assertions\\base.py\", line 39, in assert_equal\n    assert actual == expected, (\n           ^^^^^^^^^^^^^^^^^^\n","steps":[{"name":"Check that 'id' equal to 516","time":{"start":1761934052714,"stop":1761934052714,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"actual","value":"516"},{"name":"expected","value":"516"},{"name":"name","value":"'id'"}],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Check that 'title' equal to 'Many probably'","time":{"start":1761934052714,"stop":1761934052714,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"actual","value":"'Many probably'"},{"name":"expected","value":"'Many probably'"},{"name":"name","value":"'title'"}],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Check that 'slug' equal to 'many-probably'","time":{"start":1761934052714,"stop":1761934052715,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"actual","value":"'many-probably'"},{"name":"expected","value":"'many-probably'"},{"name":"name","value":"'slug'"}],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Check that 'price' equal to 7619.6","time":{"start":1761934052715,"stop":1761934052715,"duration":0},"status":"failed","statusMessage":"AssertionError: Incorrect value: \"price\". Expected value: 7619.6. Actual value: 7619.\n","statusTrace":"  File \"C:\\Users\\borbo\\PycharmProjects\\api_autotests\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\borbo\\PycharmProjects\\api_autotests\\tools\\assertions\\base.py\", line 39, in assert_equal\n    assert actual == expected, (\n           ^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[{"name":"actual","value":"7619"},{"name":"expected","value":"7619.6"},{"name":"name","value":"'price'"}],"attachmentsCount":0,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"actual","value":"GetProductResponseSchema(id=516, title='Many probably', slug='many-probably', price=7619, description='List international perform follow.', category=CategorySchema(id=574, name='Four maybe local', slug='four-maybe-local', image=HttpUrl('http://www.thompson.info/tag/category/appregister.html'), creation_at=datetime.datetime(2025, 10, 31, 18, 7, 32, tzinfo=TzInfo(UTC)), updated_at=datetime.datetime(2025, 10, 31, 18, 7, 32, tzinfo=TzInfo(UTC))), images=[HttpUrl('http://scott.biz/bloglogin.jsp')], creation_at=datetime.datetime(2025, 10, 31, 18, 7, 32, tzinfo=TzInfo(UTC)), updated_at=datetime.datetime(2025, 10, 31, 18, 7, 32, tzinfo=TzInfo(UTC)))"},{"name":"expected","value":"CreateProductResponseSchema(id=516, title='Many probably', slug='many-probably', price=7619.6, description='List international perform follow.', category=CategorySchema(id=574, name='Four maybe local', slug='four-maybe-local', image=HttpUrl('http://www.thompson.info/tag/category/appregister.html'), creation_at=datetime.datetime(2025, 10, 31, 18, 7, 32, tzinfo=TzInfo(UTC)), updated_at=datetime.datetime(2025, 10, 31, 18, 7, 32, tzinfo=TzInfo(UTC))), images=[HttpUrl('http://scott.biz/bloglogin.jsp')], creation_at=datetime.datetime(2025, 10, 31, 18, 7, 32, tzinfo=TzInfo(UTC)), updated_at=datetime.datetime(2025, 10, 31, 18, 7, 32, tzinfo=TzInfo(UTC)))"}],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":4,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"actual","value":"GetProductResponseSchema(id=516, title='Many probably', slug='many-probably', price=7619, description='List international perform follow.', category=CategorySchema(id=574, name='Four maybe local', slug='four-maybe-local', image=HttpUrl('http://www.thompson.info/tag/category/appregister.html'), creation_at=datetime.datetime(2025, 10, 31, 18, 7, 32, tzinfo=TzInfo(UTC)), updated_at=datetime.datetime(2025, 10, 31, 18, 7, 32, tzinfo=TzInfo(UTC))), images=[HttpUrl('http://scott.biz/bloglogin.jsp')], creation_at=datetime.datetime(2025, 10, 31, 18, 7, 32, tzinfo=TzInfo(UTC)), updated_at=datetime.datetime(2025, 10, 31, 18, 7, 32, tzinfo=TzInfo(UTC)))"},{"name":"expected","value":"CreateProductResponseSchema(id=516, title='Many probably', slug='many-probably', price=7619.6, description='List international perform follow.', category=CategorySchema(id=574, name='Four maybe local', slug='four-maybe-local', image=HttpUrl('http://www.thompson.info/tag/category/appregister.html'), creation_at=datetime.datetime(2025, 10, 31, 18, 7, 32, tzinfo=TzInfo(UTC)), updated_at=datetime.datetime(2025, 10, 31, 18, 7, 32, tzinfo=TzInfo(UTC))), images=[HttpUrl('http://scott.biz/bloglogin.jsp')], creation_at=datetime.datetime(2025, 10, 31, 18, 7, 32, tzinfo=TzInfo(UTC)), updated_at=datetime.datetime(2025, 10, 31, 18, 7, 32, tzinfo=TzInfo(UTC)))"}],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":5,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"stepsCount":9,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"attach_logs_to_allure::0","time":{"start":1761934052824,"stop":1761934052825,"duration":1},"status":"passed","steps":[],"attachments":[{"uid":"728f2bb5c4504978","name":"logs","source":"728f2bb5c4504978.txt","type":"text/plain","size":1410}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"story","value":"Get entity"},{"name":"severity","value":"normal"},{"name":"feature","value":"Products"},{"name":"epic","value":"Store service"},{"name":"tag","value":"products"},{"name":"tag","value":"regression"},{"name":"parentSuite","value":"tests.products"},{"name":"suite","value":"test_products"},{"name":"subSuite","value":"TestProducts"},{"name":"host","value":"Kompukter"},{"name":"thread","value":"18516-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.products.test_products"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"8ac43836e5b1898c","status":"failed","statusDetails":"AssertionError: Incorrect value: \"price\". Expected value: 1085.35. Actual value: 1085.","time":{"start":1761933975525,"stop":1761933975680,"duration":155}},{"uid":"6028040f76024760","status":"failed","statusDetails":"AssertionError: Incorrect value: \"price\". Expected value: 4523.98. Actual value: 4523.","time":{"start":1761933888682,"stop":1761933888835,"duration":153}}]},"tags":["regression","products"]},"source":"52dccd3df1cba2fe.json","parameterValues":[]}