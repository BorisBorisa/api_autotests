{"uid":"7fd8c9561968b902","name":"Update user with invalid data fails","fullName":"tests.users.test_users.TestUsers#test_update_user_with_invalid_data","historyId":"cf29e7a91263822cf8f3ec089b7d5a31","time":{"start":1761934064245,"stop":1761934064586,"duration":341},"status":"broken","statusMessage":"pydantic_core._pydantic_core.ValidationError: 2 validation errors for ErrorResponseSchema\nmessage\n  Field required [type=missing, input_value={'id': 339, 'email': 'olo...25-10-31T18:07:44.000Z'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing\nstatusCode\n  Field required [type=missing, input_value={'id': 339, 'email': 'olo...25-10-31T18:07:44.000Z'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing","statusTrace":"self = <test_users.TestUsers object at 0x000002936FE925D0>\nuser_client = <clients.users.users_client.UserClient object at 0x000002937005F110>\nfunction_user = UserFixture(request=CreateUserRequestSchema(name='Jeffrey', email='olong@example.com', password='5s37aInq1Q', avatar='...tomer', email='olong@example.com', password='5s37aInq1Q', avatar=HttpUrl('https://murphy-leblanc.com/tagsauthor.htm')))\npayload = {'name': ''}, message = ['name should not be empty']\n\n    @allure.story(AllureStory.VALIDATE_ENTITY)\n    @allure.title(\"Update user with invalid data fails\")\n    @allure.severity(Severity.NORMAL)\n    @pytest.mark.parametrize(\n        \"payload, message\",\n        test_data.user_update_invalid_data,\n        ids=test_data.user_update_invalid_ids\n    )\n    def test_update_user_with_invalid_data(self, user_client: UserClient, function_user: UserFixture, payload, message):\n        request = UpdateUserRequestSchema(name=None, email=None, password=None, avatar=None, role=None).model_copy(\n            update=payload)\n        response = user_client.update_user_api(user_id=function_user.response.id, request=request)\n>       response_data = ErrorResponseSchema.model_validate_json(response.text)\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       pydantic_core._pydantic_core.ValidationError: 2 validation errors for ErrorResponseSchema\nE       message\nE         Field required [type=missing, input_value={'id': 339, 'email': 'olo...25-10-31T18:07:44.000Z'}, input_type=dict]\nE           For further information visit https://errors.pydantic.dev/2.11/v/missing\nE       statusCode\nE         Field required [type=missing, input_value={'id': 339, 'email': 'olo...25-10-31T18:07:44.000Z'}, input_type=dict]\nE           For further information visit https://errors.pydantic.dev/2.11/v/missing\n\ntests\\users\\test_users.py:126: ValidationError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1761934038701,"stop":1761934038702,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_global_logger","time":{"start":1761934038702,"stop":1761934038702,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"attach_logs_to_allure","time":{"start":1761934063325,"stop":1761934063326,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user_client","time":{"start":1761934063326,"stop":1761934063570,"duration":244},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"function_user","time":{"start":1761934063570,"stop":1761934064245,"duration":675},"status":"passed","steps":[{"name":"Create user","time":{"start":1761934063570,"stop":1761934064240,"duration":670},"status":"passed","steps":[],"attachments":[{"uid":"435b7e66b178acf5","name":"cURL command","source":"435b7e66b178acf5.txt","type":"text/plain","size":426}],"parameters":[{"name":"request","value":"CreateUserRequestSchema(name='Jeffrey', email='olong@example.com', password='5s37aInq1Q', avatar='https://murphy-leblanc.com/tagsauthor.htm')"}],"attachmentsCount":1,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":false,"stepsCount":1,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"pydantic_core._pydantic_core.ValidationError: 2 validation errors for ErrorResponseSchema\nmessage\n  Field required [type=missing, input_value={'id': 339, 'email': 'olo...25-10-31T18:07:44.000Z'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing\nstatusCode\n  Field required [type=missing, input_value={'id': 339, 'email': 'olo...25-10-31T18:07:44.000Z'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing","statusTrace":"self = <test_users.TestUsers object at 0x000002936FE925D0>\nuser_client = <clients.users.users_client.UserClient object at 0x000002937005F110>\nfunction_user = UserFixture(request=CreateUserRequestSchema(name='Jeffrey', email='olong@example.com', password='5s37aInq1Q', avatar='...tomer', email='olong@example.com', password='5s37aInq1Q', avatar=HttpUrl('https://murphy-leblanc.com/tagsauthor.htm')))\npayload = {'name': ''}, message = ['name should not be empty']\n\n    @allure.story(AllureStory.VALIDATE_ENTITY)\n    @allure.title(\"Update user with invalid data fails\")\n    @allure.severity(Severity.NORMAL)\n    @pytest.mark.parametrize(\n        \"payload, message\",\n        test_data.user_update_invalid_data,\n        ids=test_data.user_update_invalid_ids\n    )\n    def test_update_user_with_invalid_data(self, user_client: UserClient, function_user: UserFixture, payload, message):\n        request = UpdateUserRequestSchema(name=None, email=None, password=None, avatar=None, role=None).model_copy(\n            update=payload)\n        response = user_client.update_user_api(user_id=function_user.response.id, request=request)\n>       response_data = ErrorResponseSchema.model_validate_json(response.text)\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       pydantic_core._pydantic_core.ValidationError: 2 validation errors for ErrorResponseSchema\nE       message\nE         Field required [type=missing, input_value={'id': 339, 'email': 'olo...25-10-31T18:07:44.000Z'}, input_type=dict]\nE           For further information visit https://errors.pydantic.dev/2.11/v/missing\nE       statusCode\nE         Field required [type=missing, input_value={'id': 339, 'email': 'olo...25-10-31T18:07:44.000Z'}, input_type=dict]\nE           For further information visit https://errors.pydantic.dev/2.11/v/missing\n\ntests\\users\\test_users.py:126: ValidationError","steps":[{"name":"Update user by id 339","time":{"start":1761934064245,"stop":1761934064586,"duration":341},"status":"passed","steps":[{"name":"Make PUT request to 'api/v1/users/339'","time":{"start":1761934064245,"stop":1761934064586,"duration":341},"status":"passed","steps":[],"attachments":[{"uid":"558f315dd15537af","name":"cURL command","source":"558f315dd15537af.txt","type":"text/plain","size":316}],"parameters":[{"name":"url","value":"'api/v1/users/339'"},{"name":"json","value":"{'name': ''}"}],"attachmentsCount":1,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"user_id","value":"339"},{"name":"request","value":"UpdateUserRequestSchema(name='', email=None, password=None, avatar=None, role=None)"}],"attachmentsCount":1,"shouldDisplayMessage":false,"stepsCount":1,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"stepsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"attach_logs_to_allure::0","time":{"start":1761934064591,"stop":1761934064592,"duration":1},"status":"passed","steps":[],"attachments":[{"uid":"f335ead0586e1fa3","name":"logs","source":"f335ead0586e1fa3.txt","type":"text/plain","size":492}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"epic","value":"Users service"},{"name":"severity","value":"normal"},{"name":"story","value":"Validate entity"},{"name":"feature","value":"Users"},{"name":"tag","value":"users"},{"name":"tag","value":"regression"},{"name":"parentSuite","value":"tests.users"},{"name":"suite","value":"test_users"},{"name":"subSuite","value":"TestUsers"},{"name":"host","value":"Kompukter"},{"name":"thread","value":"18516-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.users.test_users"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"message","value":"['name should not be empty']"},{"name":"payload","value":"{'name': ''}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"4c86499c8d9f7442","status":"broken","statusDetails":"pydantic_core._pydantic_core.ValidationError: 2 validation errors for ErrorResponseSchema\nmessage\n  Field required [type=missing, input_value={'id': 326, 'email': 'lor...25-10-31T18:06:28.000Z'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing\nstatusCode\n  Field required [type=missing, input_value={'id': 326, 'email': 'lor...25-10-31T18:06:28.000Z'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing","time":{"start":1761933988103,"stop":1761933988444,"duration":341}},{"uid":"c069a4391550cd49","status":"broken","statusDetails":"pydantic_core._pydantic_core.ValidationError: 2 validation errors for ErrorResponseSchema\nmessage\n  Field required [type=missing, input_value={'id': 312, 'email': 'wil...25-10-31T18:05:01.000Z'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing\nstatusCode\n  Field required [type=missing, input_value={'id': 312, 'email': 'wil...25-10-31T18:05:01.000Z'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing","time":{"start":1761933900764,"stop":1761933901314,"duration":550}}]},"tags":["regression","users"]},"source":"7fd8c9561968b902.json","parameterValues":["['name should not be empty']","{'name': ''}"]}